from flask import Flask, request, jsonify, redirect, url_for, render_template
from flask_pymongo import PyMongo
from flask_login import LoginManager, UserMixin, login_user, logout_user, login_required, current_user
from werkzeug.security import generate_password_hash, check_password_hash
from wtforms import Form, StringField, PasswordField, validators

app = Flask(__name__)
app.config['SECRET_KEY'] = 'your_secret_key'
app.config['MONGO_URI'] = 'mongodb://localhost:27017/smart_agriculture'
mongo = PyMongo(app)
login_manager = LoginManager(app)

class User(UserMixin):
    def __init__(self, username, password):
        self.username = username
        self.password = password

@login_manager.user_loader
def load_user(username):
    user = mongo.db.users.find_one({"username": username})
    if user:
        return User(username=user['username'], password=user['password'])
    return None

class LoginForm(Form):
    username = StringField('Username', [validators.DataRequired()])
    password = PasswordField('Password', [validators.DataRequired()])

@app.route('/login', methods=['GET', 'POST'])
def login():
    form = LoginForm(request.form)
    if request.method == 'POST' and form.validate():
        user = mongo.db.users.find_one({"username": form.username.data})
        if user and check_password_hash(user['password'], form.password.data):
            login_user(User(username=user['username'], password=user['password']))
            return redirect(url_for('dashboard'))
    return render_template('login.html', form=form)

@app.route('/logout')
@login_required
def logout():
    logout_user()
    return redirect(url_for('login'))

@app.route('/dashboard')
@login_required
def dashboard():
    return 'Welcome to the Dashboard'

if __name__ == '__main__':
    app.run(debug=True)
